{"version":3,"file":"static/js/848.2ec6cf17.chunk.js","mappings":"2IAEMA,E,QAAWC,EAAAA,OAAa,CAC1BC,QAAS,iCAGb,K,qBCNA,IAAMC,EAAU,mCAEVC,EAAW,CACbC,cAAc,8BAAD,OAAgCF,EAAO,mBACpDG,oBAAoB,gCAAD,OAAkCH,EAAO,mBAC5DI,qBAAqB,wBAAD,OAA0BJ,EAAO,sBACrDK,cAAc,4BAAD,OAA8BL,EAAO,mBAClDM,kBAAkB,2BAAD,OAA6BN,EAAO,mBACrDO,kBAAkB,2BAAD,OAA6BP,EAAO,mBACrDQ,kBAAkB,2BAAD,OAA6BR,EAAO,mBACrDS,mBAAmB,2BAAD,OAA6BT,EAAO,sBACtDU,aAAc,SAACC,GAAc,sCAA8BX,EAAO,kBAAUW,EAAM,+CAClFC,kBAAmB,SAACC,GAA2B,sBAAcA,EAAO,oBAAYb,EAAO,oBACvFc,kBAAmB,SAACD,GAA2B,sBAAcA,EAAO,4BAAoBb,EAAO,oBAC/Fe,kBAAmB,SAACF,GAA2B,sBAAcA,EAAO,4BAAoBb,EAAO,oBAC/FgB,mBAAoB,SAACH,GAA2B,sBAAcA,EAAO,4BAAoBb,EAAO,qBAGpG,K,0KChBaiB,EAAgBC,EAAAA,GAAAA,IAAU,8QAa1BC,EAAcD,EAAAA,GAAAA,GAAS,4FAMvBE,EAAaF,EAAAA,GAAAA,IAAU,+CAGvBG,EAAYH,EAAAA,GAAAA,GAAS,yCAIrBI,EAAcJ,EAAAA,GAAAA,KAAW,oE,mBCkCtC,MArDA,WAEI,IAAOL,GAAWU,EAAAA,EAAAA,MAAXV,QAEDW,GAAWC,EAAAA,EAAAA,MAEjB,GAA+CC,EAAAA,EAAAA,UAAS,CAAC,CACrDC,GAAI,EACJC,OAAQ,GACRC,QAAS,MACV,eAJIC,EAAY,KAAEC,EAAsB,KAOvCC,GACAC,EAAAA,EAAAA,YAAWC,EAAAA,GADXF,aAsBJ,OAnBAG,EAAAA,EAAAA,YAAU,WAG8B,aAW/B,OAX+B,0BAAhC,kHAE0BtC,EAAAA,EAAAA,IAAaI,EAAAA,EAAAA,kBAA2BY,IAAU,KAAD,EAA7DuB,EAAG,OACTL,EAAuBK,EAAIC,KAAKC,SAAQ,gDAGxCC,QAAQC,IAAI,EAAD,IAAG,QAGM,OAHN,UAGdR,GAAa,GAAO,6EAE3B,sBAbDA,GAAa,GAAM,WAEa,wBAahCjB,EACJ,GAAG,CAACF,EAASmB,KAGb,iCACI,UAACb,EAAW,WAAEW,EAAaW,OAAM,uBAAsBjB,EAASkB,MAAMC,cACtE,SAAC1B,EAAa,UAENa,EAAac,KAAI,SAAAC,GACb,OAAO,UAACzB,EAAU,YACd,SAACC,EAAS,UAAEwB,EAAKjB,UACjB,SAACN,EAAW,UAAEuB,EAAKhB,YAFCgB,EAAKlB,GAIjC,QAMpB,C","sources":["api/axios.tsx","api/requests.ts","components/Reviews/Reviews.styled.tsx","components/Reviews/Reviews.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3'\n});\n\nexport default instance;","const API_KEY = 'e388c066698fed551501fb44d5922327';\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchTrendingMovies: `/trending/movie/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginal: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    searchMovies: (search: string) => `/search/movie?api_key=${API_KEY}&query=${search}&language=en-US&page=1&include_adult=false`,\n    fetchMovieDetails: (movieId: string | undefined) => `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    fetchMovieCredits: (movieId: string | undefined) => `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    fetchMovieReviews: (movieId: string | undefined) => `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n    fetchSimilarMovies: (movieId: string | undefined) => `movie/${movieId}/similar?api_key=${API_KEY}&language=en-US`\n}\n\nexport default requests","import styled from 'styled-components';\n\nexport const ReviewWrapper = styled.div`\n  margin-left: 20px;\n  border-top: red solid 2px;\n  margin-right: 20px;\n  position: relative;\n  z-index: 1;\n  min-height: 300px;\n  background-color: rgba(143, 143, 143, 0.04);\n  height: 200px;\n  overflow: scroll;\n  //padding-top: 60vh;\n`;\n\nexport const ReviewTitle = styled.h2`\n  font-weight: 800;\n  font-size: 30px;\n  padding-bottom: 0.3rem;\n`\n\nexport const ItemReview = styled.div`\n  padding: 10px 20px;\n`;\nexport const ItemTitle = styled.h3`\n margin: 5px 0;\n`;\n\nexport const ItemContent = styled.span`\n  font-weight: normal;\n  font-size: 18px;\n`;","import React, {useContext, useEffect, useState} from 'react';\nimport instance from '../../api/axios';\nimport requests from '../../api/requests';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {MovieIdType} from '../../pages/MovieDetails';\nimport {ItemContent, ItemReview, ItemTitle, ReviewTitle, ReviewWrapper} from './Reviews.styled';\nimport {IsLoadingContext} from '../../App';\n\n\nfunction Reviews() {\n\n    const {movieId} = useParams<MovieIdType>();\n\n    const location = useLocation()\n\n    const [movieReviews, setMovieReviewsCredits] = useState([{\n        id: 0,\n        author: '',\n        content: '',\n    }]);\n\n    const {\n        setIsLoading\n    } = useContext(IsLoadingContext);\n\n    useEffect(() => {\n            setIsLoading(true);\n\n            async function fetchMovieReviews() {\n                try {\n                    const res = await instance.get(requests.fetchMovieReviews(movieId));\n                    setMovieReviewsCredits(res.data.results)\n                }\n                catch (e) {\n                    console.log(e)\n                }\n                finally {\n                    setIsLoading(false);\n                }\n            }\n\n            fetchMovieReviews();\n        }, [movieId, setIsLoading]\n    );\n    return (\n        <>\n            <ReviewTitle>{movieReviews.length} Member reviews for {location.state.movieName}</ReviewTitle>\n            <ReviewWrapper>\n                {\n                    movieReviews.map(item => {\n                        return <ItemReview key={item.id}>\n                            <ItemTitle>{item.author}</ItemTitle>\n                            <ItemContent>{item.content}</ItemContent>\n                        </ItemReview>\n                    })\n                }\n            </ReviewWrapper>\n        </>\n\n    )\n}\n\nexport default Reviews"],"names":["instance","axios","baseURL","API_KEY","requests","fetchTrending","fetchTrendingMovies","fetchNetflixOriginal","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","searchMovies","search","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSimilarMovies","ReviewWrapper","styled","ReviewTitle","ItemReview","ItemTitle","ItemContent","useParams","location","useLocation","useState","id","author","content","movieReviews","setMovieReviewsCredits","setIsLoading","useContext","IsLoadingContext","useEffect","res","data","results","console","log","length","state","movieName","map","item"],"sourceRoot":""}